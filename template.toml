
[[objects]]
# 軸並行直方体 (Box)
shape = { type = "Box", size = [6.0, 12.0, 8.0] }
material = { type = "Glass", ior = 1.52 }
# Transformで回転させて、傾いた直方体にする
transform = { position = [0.0, 0.0, -15.0], rotation_y_deg = 25.0 }

[[objects]]
# 有限円柱 (Cylinder) - CSGで組み立てる
shape = { type = "Cylinder", height = 20.0, radius = 1.0 }
material = { type = "Mirror" }
transform = { position = [10.0, 0.0, 15.0], rotation_y_deg = 0.0 }

[[objects]]
# ウェッジ (Wedge)
shape = { type = "Wedge", size = [10.0, 8.0, 4.0], angle_deg = 15.0 }
material = { type = "Glass", ior = 1.52 }
transform = { position = [18.0, 0.0, 0.0], rotation_y_deg = -90.0 }

[[objects]]
# レンズ (Lens)
shape = { type = "Lens", thickness = 2.0, diameter = 18.0, r1 = 20.0, r2 = -20.0 }
material = { type = "Glass", ior = 1.52 }
transform = { position = [0.0, 0.0, 0.0], rotation_y_deg = 0.0 }

[[objects]]
# 床の鏡 (Plane)
shape = { type = "Plane", normal = [0.0, 1.0, 0.0] }
material = { type = "Mirror" }
transform = { position = [0.0, -10.0, 0.0], rotation_y_deg = 0.0 }

# 1. グリッド状の平行光
[[scene.ray_generators]]
type = "ParallelGrid"
origin_corner = [-10.0, -5.0, -5.0] # グリッドの開始角
vec_u = [0.0, 10.0, 0.0]           # U方向のベクトル(グリッドの幅)
vec_v = [0.0, 0.0, 10.0]           # V方向のベクトル(グリッドの高さ)
count_u = 2                       # U方向のレイの数
count_v = 2                       # V方向のレイの数
direction = [1.0, 0.0, 0.0]        # 全てのレイが向かう方向
current_ior = 1.0

# 2. プロジェクターのような点光源
[[scene.ray_generators]]
type = "Projector"
origin = [-15.0, 0.0, 0.0]         # 光源の単一の始点
target_corner = [-5.0, -5.0, -5.0] # 投影面の開始角
target_u = [0.0, 10.0, 0.0]        # 投影面のU方向ベクトル
target_v = [0.0, 0.0, 10.0]        # 投影面のV方向ベクトル
count_u = 3                      # U方向のレイの数
count_v = 1                       # V方向のレイの数
current_ior = 1.0

# 個別レイ（必要なら追加）
[[scene.rays]]
origin = [0.0, 0.0, 0.0]
direction = [1.0, 0.0, 0.0]